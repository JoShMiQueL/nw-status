name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-windows-exe:
    name: Build Windows .exe
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.3.0

      - name: Install dependencies
        run: bun install

      - name: Build executable
        run: bun build src/index.ts --compile --outfile dist/nw-monitor.exe
          
      - name: Copy config files
        run: |
          Copy-Item .env.example dist/.env.example
          Copy-Item config.example.json dist/config.example.json
          Copy-Item README.md dist/README.md
        shell: pwsh

      - name: Create release package
        run: |
          cd dist
          Compress-Archive -Path * -DestinationPath ../nw-monitor-windows-x64.zip
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: nw-monitor-windows-x64
          path: nw-monitor-windows-x64.zip

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-windows-exe
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.3.0

      - name: Install dependencies
        run: bun install

      - name: Build project
        run: bun run build || echo "No build script"

      - name: Generate changelog
        id: changelog
        run: |
          # Obtener el tag anterior
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -z "$PREV_TAG" ]; then
            # Si no hay tag anterior, usar todos los commits
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            # Generar changelog desde el tag anterior
            CHANGELOG=$(git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: nw-monitor-windows-x64

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: nw-monitor-windows-x64.zip
          body: |
            ## üöÄ New World Server Monitor Release ${{ github.ref_name }}
            
            ### Changes
            ${{ steps.changelog.outputs.changelog }}
            
            ### üì¶ Windows Executable
            Download `nw-monitor-windows-x64.zip` for a standalone executable:
            1. Extract the ZIP file
            2. Copy `.env.example` to `.env` and configure your Telegram credentials
            3. Copy `config.example.json` to `config.json` and configure your servers
            4. Run `nw-monitor.exe`
            
            **Requirements:** Windows 10/11 (64-bit) - No additional dependencies!
            
            ### üê≥ Docker
            ```bash
            # Pull image
            docker pull ghcr.io/${{ github.repository }}:${{ github.ref_name }}
            
            # Or use docker-compose
            docker-compose up -d
            ```
            
            ### üìù Source Installation
            ```bash
            git clone https://github.com/${{ github.repository }}.git
            cd nw-status
            git checkout ${{ github.ref_name }}
            bun install
            cp .env.example .env
            cp config.example.json config.json
            # Edit .env and config.json
            bun start
            ```
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
