name: Manual Pre-release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Pre-release version (e.g., 1.0.0-beta.1)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  create-prerelease:
    name: Create Pre-release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Validate version format
        run: |
          VERSION="${{ inputs.version }}"
          if ! echo "$VERSION" | grep -qE '^[0-9]+\.[0-9]+\.[0-9]+-(alpha|beta|rc)\.[0-9]+$'; then
            echo "‚ùå Invalid version format"
            echo "Expected: X.Y.Z-TYPE.N (e.g., 1.0.0-beta.1)"
            exit 1
          fi
          echo "‚úÖ Valid pre-release version: $VERSION"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Update package.json
        run: |
          bun pm pkg set version="${{ inputs.version }}"

      - name: Create tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "chore: release v${{ inputs.version }}"
          git tag -a "v${{ inputs.version }}" -m "Pre-release v${{ inputs.version }}"
          git push origin "v${{ inputs.version }}"

  build-windows:
    name: Build Windows Executable
    runs-on: windows-latest
    needs: create-prerelease
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: v${{ inputs.version }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build executable
        run: bun build src/index.ts --compile --outfile dist/nw-monitor.exe

      - name: Copy config files
        run: bun scripts/copy-build-files.ts

      - name: Create release package
        run: |
          cd dist
          Compress-Archive -Path * -DestinationPath ../nw-monitor-${{ inputs.version }}-windows-x64.zip
        shell: pwsh

      - name: Create GitHub Pre-release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ inputs.version }}
          name: Pre-release v${{ inputs.version }}
          body: |
            ## üöß Pre-release v${{ inputs.version }}
            
            This is a pre-release version for testing purposes.
            
            ### üì• Download
            - Windows executable available below
            
            ### ‚ö†Ô∏è Note
            - This is NOT a stable release
            - Docker images are NOT published for pre-releases
            - Use at your own risk for testing only
          files: nw-monitor-${{ inputs.version }}-windows-x64.zip
          prerelease: true
          draft: false
