name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0 or 1.0.0-beta.1)'
        required: true
        type: string
      prerelease:
        description: 'Is this a pre-release?'
        required: false
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Validate version format
        run: |
          VERSION="${{ inputs.version }}"
          if ! echo "$VERSION" | grep -qE '^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z]+\.[0-9]+)?$'; then
            echo "‚ùå Invalid version format"
            echo "Expected: X.Y.Z or X.Y.Z-TYPE.N (e.g., 1.0.0 or 1.0.0-beta.1)"
            exit 1
          fi
          echo "‚úÖ Valid version: $VERSION"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Update package.json
        run: |
          bun pm pkg set version="${{ inputs.version }}"

      - name: Create tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          git commit -m "chore: release v${{ inputs.version }}"
          git tag -a "nwstatus-v${{ inputs.version }}" -m "Release v${{ inputs.version }}"
          git push origin "nwstatus-v${{ inputs.version }}"

  build-windows:
    name: Build Windows Executable
    runs-on: windows-latest
    needs: create-release
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: nwstatus-v${{ inputs.version }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build executable
        run: bun build src/index.ts --compile --outfile dist/nw-monitor.exe

      - name: Copy config files
        run: bun scripts/copy-build-files.ts

      - name: Create release package
        run: |
          cd dist
          Compress-Archive -Path * -DestinationPath ../nw-monitor-windows-x64-${{ inputs.version }}.zip
        shell: pwsh

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nwstatus-v${{ inputs.version }}
          name: NW Status v${{ inputs.version }}
          body: |
            ## üì¶ Release v${{ inputs.version }}
            
            Manual release created via GitHub Actions.
            
            ### üì• Download
            - Windows executable available below
            
            ### ‚ö†Ô∏è Note
            ${{ inputs.prerelease && '- This is a pre-release version for testing' || '- This is a stable release' }}
            - Docker images are NOT published for manual releases
          files: nw-monitor-windows-x64-${{ inputs.version }}.zip
          prerelease: ${{ inputs.prerelease }}
          draft: true
